At Point A, the state of the computation will be :

Program Counter: 3


The Stack

=========

--- foo

  x [5]

--- main

  (empty)



Explanation: 

First the program will start in "main". Then it will go on and reach the function "foo", which will turn the program to line 1 that allows it to excecute the function "foo". The program will then go to line two, where it encounters a variable declaration that adds the local variable to "foo"'s stack frame. Then, the state will be updated and the result that "x  [5]" is shown. Then it will keep going and produce an out put of 5 because of the "printf" function. After that, it will keep going and return from "foo" and then continue the execution of the program after the call of "foo" in "main". When it reaches the last line of "main" which exits the function with a "return" statement. Because of that, the execution of the program is complete.
